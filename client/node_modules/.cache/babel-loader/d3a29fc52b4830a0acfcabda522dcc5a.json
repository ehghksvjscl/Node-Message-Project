{"ast":null,"code":"var _jsxFileName = \"/Users/saemihong/Desktop/Node-Message-Project/client/src/components/views/RegisterPage/RegisterPage.js\";\n// eslint-disable-next-line\nimport React from \"react\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\nimport GoldButton from \"../../common/Buttons/GoldButton\";\nimport { Form, Input } from 'antd';\nimport Home from \"../../common/Home/Home\";\nimport { useAlert } from 'react-alert';\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      user_id: '',\n      name: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required('이름을 입력하세요.'),\n      user_id: Yup.string().required('아이디를 입력하세요.'),\n      password: Yup.string().min(8, '페스워드는 8자리 이상입니다.').required('비밀번호를 입력하세요.'),\n      confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], '비밀번호가 일치하지 않습니다.').required('확인 비밀번호를 입력하세요.')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let dataToSubmit = {\n          user_id: values.user_id,\n          password: values.password,\n          name: values.name\n        };\n        dispatch(registerUser(dataToSubmit)).then(response => {\n          if (response.payload.success) {\n            alert.success(\"회원가입 되었습니다.\");\n            props.history.push(\"/login\");\n          } else {\n            alert.error(\"중복된 아이디 입니다.\");\n          }\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    } = props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      style: {\n        height: \"110vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Home, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: \"72px\",\n        fontWeight: \"bold\",\n        color: \"#DE4949\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"S\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: \"72px\",\n        fontWeight: \"bold\",\n        color: \"#000000\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, \"ign up\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        width: '18.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      style: {\n        height: \"67px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"name_lable\",\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"\\uC774\\uB984\"), /*#__PURE__*/React.createElement(Input, {\n      id: \"name\",\n      placeholder: \"Enter your name\",\n      type: \"text\",\n      value: values.name,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.name && touched.name ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, errors.name)), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      style: {\n        height: \"67px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"login_lable\",\n      for: \"user_id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"\\uC544\\uC774\\uB514\"), /*#__PURE__*/React.createElement(Input, {\n      id: \"user_id\",\n      placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      type: \"text\",\n      value: values.user_id,\n      onChange: handleChange,\n      className: errors.user_id && touched.user_id ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), errors.user_id && touched.user_id && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, errors.user_id)), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      style: {\n        height: \"67px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"password_lable\",\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), /*#__PURE__*/React.createElement(Input, {\n      id: \"password\",\n      placeholder: \"Enter your password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      className: errors.password && touched.password ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      style: {\n        height: \"67px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"password_lable\",\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"), /*#__PURE__*/React.createElement(Input, {\n      id: \"confirmPassword\",\n      placeholder: \"Enter your confirmPassword\",\n      type: \"password\",\n      value: values.confirmPassword,\n      onChange: handleChange,\n      className: errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), errors.confirmPassword && touched.confirmPassword && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, errors.confirmPassword)), /*#__PURE__*/React.createElement(Form.Item, {\n      style: {\n        marginTop: \"2rem\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(GoldButton, {\n      name: \"My \\uD2B8\\uB9AC \\uB9CC\\uB4E4\\uAE30\",\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }))));\n  });\n}\n\n;\nexport default RegisterPage;","map":{"version":3,"sources":["/Users/saemihong/Desktop/Node-Message-Project/client/src/components/views/RegisterPage/RegisterPage.js"],"names":["React","Formik","Yup","registerUser","useDispatch","GoldButton","Form","Input","Home","useAlert","RegisterPage","props","dispatch","alert","user_id","name","password","confirmPassword","object","shape","string","required","min","oneOf","ref","values","setSubmitting","setTimeout","dataToSubmit","then","response","payload","success","history","push","error","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","height","fontSize","fontWeight","color","width","marginTop","textAlign"],"mappings":"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","sourcesContent":["// eslint-disable-next-line\nimport React from \"react\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\nimport GoldButton from \"../../common/Buttons/GoldButton\";\nimport {\n  Form,\n  Input,\n} from 'antd';\nimport Home from \"../../common/Home/Home\";\nimport { useAlert } from 'react-alert'\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  const alert = useAlert()\n\n  return (\n\n    <Formik\n      initialValues={{\n        user_id: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('이름을 입력하세요.'),\n        user_id: Yup.string()\n          .required('아이디를 입력하세요.'),\n        password: Yup.string()\n          .min(8, '페스워드는 8자리 이상입니다.')\n          .required('비밀번호를 입력하세요.'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], '비밀번호가 일치하지 않습니다.')\n          .required('확인 비밀번호를 입력하세요.')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            user_id: values.user_id,\n            password: values.password,\n            name: values.name,\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              alert.success(\"회원가입 되었습니다.\")\n              props.history.push(\"/login\");\n            } else {\n              alert.error(\"중복된 아이디 입니다.\")\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <div className=\"app\" style={{height: \"110vh\"}}>\n            <Home />\n            <div>\n              <span style={{fontSize: \"72px\", fontWeight: \"bold\", color: \"#DE4949\"}}>S</span>\n              <span style={{fontSize: \"72px\", fontWeight: \"bold\", color: \"#000000\"}}>ign up</span>\n            </div>\n            <form onSubmit={handleSubmit} style={{ width: '18.75rem' }}>\n              <Form.Item required style={{height: \"67px\"}}>\n              <label className=\"name_lable\" for=\"name\">이름</label>\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"register-input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required style={{height: \"67px\"}}>\n                <label className=\"login_lable\" for=\"user_id\">아이디</label>\n                <Input\n                  id=\"user_id\"\n                  placeholder=\"아이디를 입력하세요\"\n                  type=\"text\"\n                  value={values.user_id}\n                  onChange={handleChange}\n                  className={\n                    errors.user_id && touched.user_id ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.user_id && touched.user_id && (\n                  <div className=\"register-input-feedback\">{errors.user_id}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required style={{height: \"67px\"}}>\n                <label className=\"password_lable\" for=\"password\">비밀번호</label>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"register-input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required style={{height: \"67px\"}}>\n                <label className=\"password_lable\" for=\"password\">비밀번호 확인</label>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"register-input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item  style={{ marginTop: \"2rem\", textAlign: \"center\"}}>\n                <GoldButton name=\"My 트리 만들기\" onClick={handleSubmit}/>\n                {/* <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-GoldButton\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    My 복주머니 보러가기\n                </Button> */}\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n"]},"metadata":{},"sourceType":"module"}