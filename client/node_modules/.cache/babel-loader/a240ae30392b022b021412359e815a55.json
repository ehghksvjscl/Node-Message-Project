{"ast":null,"code":"var _jsxFileName = \"/Users/saemihong/Desktop/Node-Message-Project/client/src/components/views/LandingPage/LandingPage.js\";\n// eslint-disable-next-line\nimport React, { useEffect, useState } from 'react';\nimport Tiger from '../../common/Background/Tiger';\nimport Number from '../../common/Background/Number';\nimport styled from 'styled-components';\nimport GoldButton from '../../common/Buttons/GoldButton';\nimport { useSelector } from \"react-redux\";\nimport NavBar from '../NavBar/NavBar';\nimport { CLIENT_URL } from '../../Config';\nimport Axios from 'axios';\nimport ani01 from '../../../assets/icons/ani01.png';\nimport ani02 from '../../../assets/icons/ani02.png';\nimport ani03 from '../../../assets/icons/ani03.png';\nimport ani04 from '../../../assets/icons/ani04.png';\nimport ani05 from '../../../assets/icons/ani05.png';\nimport ani06 from '../../../assets/icons/ani06.png';\nimport arrow from '../../../assets/icons/arrowRight.png';\nimport { useHistory } from 'react-router-dom';\nimport * as usestate from 'react-usestateref';\nconst StyledTitle = styled.div`\n    font-size: 24px;\n    font-weight: bold;\n    position: absolute;\n    top: 120px;\n    margin: 0 auto;\n`;\nconst ButtonDiv = styled.div`\n    margin-top: 18rem;\n`;\nconst StyledIconListContainer = styled.div`\n    display: flex;\n    flex-wrap: no-wrap;\n    width: 350px;\n    height: 250px;\n    position: relative;\n    top: 20%;\n    margin-left: 30px;\n    overflow: hidden;\n    z-index: 100;\n`;\nconst StyledIconListUl = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    width: 350px;\n    height: 250px;\n    padding-left: 0;\n    flex-direction: column;\n    position: absolute;\n    top: 0%;\n    z-index: 9;\n`;\nconst StyledIconList = styled.li`\n    list-style: none;\n    width: 33.3%;\n    position: relative;\n`;\nconst StyledFromUserList = styled.li`\n    width: 30%;\n    height: 125px;\n    position: relative;\n    top: 50px;\n`;\nconst StyledButtonRight = styled.button`\n    width: 10px;\n    position: absolute;\n    top: 30%;\n    right: 6%;\n    background-color: transparent;\n    border: none;\n    z-index: 999;\n\n`;\nconst StyledButtonLeft = styled.button`\nwidth: 10px;\nposition: absolute;\ntop: 30%;\nleft: 6%;\nbackground-color: transparent;\nborder: none;\ntransform: rotate(-180deg);\nz-index: 999;\n`;\n\nfunction LandingPage(props) {\n  const history = useHistory();\n  const animals = [{\n    id: 1,\n    path: ani01\n  }, {\n    id: 2,\n    path: ani02\n  }, {\n    id: 3,\n    path: ani03\n  }, {\n    id: 4,\n    path: ani04\n  }, {\n    id: 5,\n    path: ani05\n  }, {\n    id: 6,\n    path: ani06\n  }];\n  const user = useSelector(state => state.user);\n  const [Messages, setMessages] = useState([]);\n  const [badges, setBadges] = useState([]);\n  const [fromUser, setFromUser] = useState([]);\n  const [clickCount, setClickCount, clickCountRef] = usestate(0);\n  const [arrowMove, setArrowMove] = useState(0);\n\n  const handleStartClick = () => {\n    props.history.push('/login');\n  };\n\n  useEffect(() => {\n    // 로그인 상태\n    if (user.userData && user.userData.isAuth) {\n      getMyMessages(user.userData._id);\n    }\n  }, [user.userData]);\n\n  const getMyMessages = id => {\n    Axios.get(`http://localhost:5000/api/messages/list/${id}`).then(response => {\n      const badgeArray = [];\n      const pathArray = [];\n      const fromUserList = [];\n      setMessages(response.data.messages);\n      response.data.messages.map(meg => {\n        badgeArray.push(meg.badge);\n        fromUserList.push(meg.fromUserName);\n      });\n      setFromUser(fromUserList);\n      const findId = badgeArray.find((num, index) => {\n        // num === animals[index].id\n        animals.forEach(item => {\n          if (item.id === num) {\n            pathArray.push(item.path);\n          }\n        });\n      });\n      setBadges(pathArray);\n    });\n  };\n\n  const copyToClipboard = val => {\n    const t = document.createElement(\"textarea\");\n    document.body.appendChild(t);\n    t.value = val;\n    t.select();\n    document.execCommand('copy');\n    document.body.removeChild(t);\n    alert(\"내 주소가 복사 되었습니다.\");\n  }; //   state 값 한번 유지 되는 버그 수정 필요\n  //   수정 완료\n\n\n  const handleRightArrow = async () => {\n    const page = Messages.length / 5;\n\n    if (clickCountRef.current > parseInt(page * -1)) {\n      setClickCount(clickCount - 1);\n      setArrowMove(clickCountRef.current * 350);\n    }\n  };\n\n  const handleLeftArrow = async () => {\n    const page = Messages.length / 5;\n\n    if (clickCountRef.current <= parseInt(page * -1)) {\n      setClickCount(clickCount + 1);\n      setArrowMove(clickCountRef.current * 350);\n    }\n  };\n\n  const handleClickedIcon = index => {\n    let thisMsg = Messages[index];\n    history.push({\n      pathname: '/getmessage',\n      state: {\n        thisMsg: thisMsg\n      }\n    });\n  }; // 로그인 안했을 경우\n\n\n  if (user.userData && !user.userData.isAuth) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Number, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(StyledTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, \"\\uC0C8\\uD574 \\uBCF5 \\uB9CE\\uC774 \\uC8FC\\uC138\\uC694.\"), /*#__PURE__*/React.createElement(Tiger, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(StyledIconListContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(StyledIconListUl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, badges.map((iconNum, index) => /*#__PURE__*/React.createElement(StyledIconList, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: iconNum,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 85\n      }\n    }))))), /*#__PURE__*/React.createElement(ButtonDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(GoldButton, {\n      name: \"\\uC2DC\\uC791\\uD558\\uAE30\",\n      onClick: handleStartClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }))));\n  } else {\n    // 로그인 했을 경우\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Number, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(StyledTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, \"\\uC0C8\\uD574 \\uBCF5 \\uB9CE\\uC774 \\uC8FC\\uC138\\uC694.\"), /*#__PURE__*/React.createElement(Tiger, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(StyledButtonLeft, {\n      onClick: handleLeftArrow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: arrow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(StyledIconListContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(StyledIconListUl, {\n      style: {\n        left: `${arrowMove}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, badges.map((iconNum, index) => /*#__PURE__*/React.createElement(StyledIconList, {\n      onClick: () => handleClickedIcon(index),\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: iconNum,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 128\n      }\n    }))))), /*#__PURE__*/React.createElement(StyledButtonRight, {\n      onClick: handleRightArrow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: arrow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(ButtonDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(GoldButton, {\n      name: \"\\uB0B4 \\uB9C1\\uD06C \\uBCF5\\uC0AC\",\n      onClick: () => copyToClipboard(`${CLIENT_URL}/link/${user.userData._id}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }\n    }))));\n  }\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["/Users/saemihong/Desktop/Node-Message-Project/client/src/components/views/LandingPage/LandingPage.js"],"names":["React","useEffect","useState","Tiger","Number","styled","GoldButton","useSelector","NavBar","CLIENT_URL","Axios","ani01","ani02","ani03","ani04","ani05","ani06","arrow","useHistory","usestate","StyledTitle","div","ButtonDiv","StyledIconListContainer","StyledIconListUl","ul","StyledIconList","li","StyledFromUserList","StyledButtonRight","button","StyledButtonLeft","LandingPage","props","history","animals","id","path","user","state","Messages","setMessages","badges","setBadges","fromUser","setFromUser","clickCount","setClickCount","clickCountRef","arrowMove","setArrowMove","handleStartClick","push","userData","isAuth","getMyMessages","_id","get","then","response","badgeArray","pathArray","fromUserList","data","messages","map","meg","badge","fromUserName","findId","find","num","index","forEach","item","copyToClipboard","val","t","document","createElement","body","appendChild","value","select","execCommand","removeChild","alert","handleRightArrow","page","length","current","parseInt","handleLeftArrow","handleClickedIcon","thisMsg","pathname","iconNum","left"],"mappings":"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","sourcesContent":["// eslint-disable-next-line\nimport React, { useEffect, useState } from 'react'\nimport Tiger from '../../common/Background/Tiger';\nimport Number from '../../common/Background/Number';\nimport styled from 'styled-components';\nimport GoldButton from '../../common/Buttons/GoldButton';\nimport { useSelector } from \"react-redux\";\nimport NavBar from '../NavBar/NavBar';\nimport { CLIENT_URL } from '../../Config';\nimport Axios from 'axios';\nimport ani01 from '../../../assets/icons/ani01.png'\nimport ani02 from '../../../assets/icons/ani02.png'\nimport ani03 from '../../../assets/icons/ani03.png'\nimport ani04 from '../../../assets/icons/ani04.png'\nimport ani05 from '../../../assets/icons/ani05.png'\nimport ani06 from '../../../assets/icons/ani06.png'\nimport arrow from '../../../assets/icons/arrowRight.png'\nimport {useHistory} from 'react-router-dom'\nimport * as usestate from 'react-usestateref'\n\n\nconst StyledTitle = styled.div`\n    font-size: 24px;\n    font-weight: bold;\n    position: absolute;\n    top: 120px;\n    margin: 0 auto;\n`\nconst ButtonDiv = styled.div`\n    margin-top: 18rem;\n`\nconst StyledIconListContainer = styled.div`\n    display: flex;\n    flex-wrap: no-wrap;\n    width: 350px;\n    height: 250px;\n    position: relative;\n    top: 20%;\n    margin-left: 30px;\n    overflow: hidden;\n    z-index: 100;\n`\nconst StyledIconListUl = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    width: 350px;\n    height: 250px;\n    padding-left: 0;\n    flex-direction: column;\n    position: absolute;\n    top: 0%;\n    z-index: 9;\n`\nconst StyledIconList = styled.li`\n    list-style: none;\n    width: 33.3%;\n    position: relative;\n`\nconst StyledFromUserList = styled.li`\n    width: 30%;\n    height: 125px;\n    position: relative;\n    top: 50px;\n`\n\n\nconst StyledButtonRight = styled.button`\n    width: 10px;\n    position: absolute;\n    top: 30%;\n    right: 6%;\n    background-color: transparent;\n    border: none;\n    z-index: 999;\n\n`\n\nconst StyledButtonLeft= styled.button`\nwidth: 10px;\nposition: absolute;\ntop: 30%;\nleft: 6%;\nbackground-color: transparent;\nborder: none;\ntransform: rotate(-180deg);\nz-index: 999;\n`\n\nfunction LandingPage(props) {\n    const history = useHistory()\n\n    const animals = [\n        {id: 1, path : ani01},\n        {id: 2, path : ani02},\n        {id: 3, path : ani03},\n        {id: 4, path : ani04},\n        {id: 5, path : ani05},\n        {id: 6, path : ani06},\n        ]\n    const user = useSelector(state => state.user)\n    const [Messages, setMessages] = useState([])\n    const [badges, setBadges] = useState([])\n    const [fromUser, setFromUser] = useState([])\n    const [clickCount,setClickCount,clickCountRef] = usestate(0)\n    const [arrowMove, setArrowMove] = useState(0)\n\n    const handleStartClick = () => {\n        props.history.push('/login')\n    }\n    \n    useEffect(() => {\n        // 로그인 상태\n        if (user.userData && user.userData.isAuth) {\n            getMyMessages(user.userData._id)\n        }\n    }, [user.userData])\n\n\n    const getMyMessages = (id) => {\n        Axios.get(`http://localhost:5000/api/messages/list/${id}`)\n        .then(response=> {\n            const badgeArray = []\n            const pathArray = []\n            const fromUserList = []\n\n            setMessages(response.data.messages)\n            response.data.messages.map(meg => {\n                badgeArray.push(meg.badge)\n                fromUserList.push(meg.fromUserName)\n            })\n            setFromUser(fromUserList)\n            const findId = badgeArray.find((num, index) => {\n                // num === animals[index].id\n                animals.forEach(item => {\n                    if(item.id === num){\n                        pathArray.push(item.path)\n                    }\n                })\n            })\n            setBadges(pathArray)\n        })\n    }\n\n    const copyToClipboard = (val) => {\n        const t = document.createElement(\"textarea\");\n        document.body.appendChild(t);\n        t.value = val;\n        t.select();\n        document.execCommand('copy');\n        document.body.removeChild(t);\n        alert(\"내 주소가 복사 되었습니다.\")\n      }\n\n    //   state 값 한번 유지 되는 버그 수정 필요\n    //   수정 완료\n      const handleRightArrow= async ()=>{\n        const page = Messages.length / 5\n        if (clickCountRef.current > parseInt(page * -1)) {\n            setClickCount(clickCount - 1)\n            setArrowMove(clickCountRef.current * 350)\n        } \n      }\n\n      const handleLeftArrow= async ()=>{\n        const page = Messages.length / 5\n        if (clickCountRef.current <= parseInt(page * -1)) {\n            setClickCount(clickCount + 1)\n            setArrowMove(clickCountRef.current * 350)\n        } \n    }\n\n    const handleClickedIcon=(index)=>{\n        let thisMsg = Messages[index]\n        history.push({\n            pathname : '/getmessage',\n            state : {\n                thisMsg : thisMsg\n            }\n        })\n    }\n\n    // 로그인 안했을 경우\n    if (user.userData && !user.userData.isAuth) {\n        return (\n            <>\n                <div className=\"app\">\n                    <NavBar />\n                    <Number />\n                    <StyledTitle>새해 복 많이 주세요.</StyledTitle>\n                    <Tiger />\n                    <StyledIconListContainer>\n                        <StyledIconListUl>\n                        {badges.map((iconNum, index) => <StyledIconList key={index}><img src={iconNum}/></StyledIconList>)}\n                        </StyledIconListUl>\n                    </StyledIconListContainer>                   \n                    <ButtonDiv>\n                        <GoldButton name=\"시작하기\" onClick={handleStartClick}/>\n                    </ButtonDiv>\n                </div>\n            </>\n        )\n    } else {\n        // 로그인 했을 경우\n        return (\n            <>\n                <div className=\"app\">\n                    <NavBar />\n                    <Number />\n                    <StyledTitle>새해 복 많이 주세요.</StyledTitle>\n                    {/* 본인 메시지 리스트 */}\n                    <Tiger />\n                    <StyledButtonLeft onClick={handleLeftArrow}>\n                        <img src={arrow} />\n                    </StyledButtonLeft>\n                    <StyledIconListContainer>\n                        <StyledIconListUl style={{left: `${arrowMove}px`}}>\n                            {badges.map((iconNum, index) => <StyledIconList onClick={()=>handleClickedIcon(index)} key={index}><img src={iconNum}/></StyledIconList>)}\n                        </StyledIconListUl>\n                    </StyledIconListContainer>\n                    <StyledButtonRight onClick={handleRightArrow}>\n                        <img src={arrow} />\n                    </StyledButtonRight>\n                    <ButtonDiv>\n                        <GoldButton name=\"내 링크 복사\" onClick={() => copyToClipboard(`${CLIENT_URL}/link/${user.userData._id}`)}/>\n                    </ButtonDiv>\n                </div>\n            </>\n        )\n    }\n\n}\n\nexport default LandingPage\n"]},"metadata":{},"sourceType":"module"}